// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ItemAdded extends ethereum.Event {
  get params(): ItemAdded__Params {
    return new ItemAdded__Params(this);
  }
}

export class ItemAdded__Params {
  _event: ItemAdded;

  constructor(event: ItemAdded) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get enable(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get scale(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get speed(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get x(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get y(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get z(): i32 {
    return this._event.parameters[8].value.toI32();
  }
}

export class NFTStorage extends ethereum.SmartContract {
  static bind(address: Address): NFTStorage {
    return new NFTStorage("NFTStorage", address);
  }
}

export class AddNFTCall extends ethereum.Call {
  get inputs(): AddNFTCall__Inputs {
    return new AddNFTCall__Inputs(this);
  }

  get outputs(): AddNFTCall__Outputs {
    return new AddNFTCall__Outputs(this);
  }
}

export class AddNFTCall__Inputs {
  _call: AddNFTCall;

  constructor(call: AddNFTCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _scale(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _speed(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _x(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _y(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get _z(): i32 {
    return this._call.inputValues[6].value.toI32();
  }
}

export class AddNFTCall__Outputs {
  _call: AddNFTCall;

  constructor(call: AddNFTCall) {
    this._call = call;
  }
}

export class RemoveNFTCall extends ethereum.Call {
  get inputs(): RemoveNFTCall__Inputs {
    return new RemoveNFTCall__Inputs(this);
  }

  get outputs(): RemoveNFTCall__Outputs {
    return new RemoveNFTCall__Outputs(this);
  }
}

export class RemoveNFTCall__Inputs {
  _call: RemoveNFTCall;

  constructor(call: RemoveNFTCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveNFTCall__Outputs {
  _call: RemoveNFTCall;

  constructor(call: RemoveNFTCall) {
    this._call = call;
  }
}

export class UpdateNFTCall extends ethereum.Call {
  get inputs(): UpdateNFTCall__Inputs {
    return new UpdateNFTCall__Inputs(this);
  }

  get outputs(): UpdateNFTCall__Outputs {
    return new UpdateNFTCall__Outputs(this);
  }
}

export class UpdateNFTCall__Inputs {
  _call: UpdateNFTCall;

  constructor(call: UpdateNFTCall) {
    this._call = call;
  }

  get _nftAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _scale(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _speed(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _x(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _y(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get _z(): i32 {
    return this._call.inputValues[6].value.toI32();
  }
}

export class UpdateNFTCall__Outputs {
  _call: UpdateNFTCall;

  constructor(call: UpdateNFTCall) {
    this._call = call;
  }
}
